name: Build release

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout files
      uses: actions/checkout@v1
    - name: Build .file
      run: |
        mkdir out
        mkdir out/decompiled-script
        mkdir out/decompiled-script/translation-files
        cp -r story/ep1/wh out/decompiled-script/translation-files/ep1
        cp -r story/ep2/wh out/decompiled-script/translation-files/ep2
        cp -r story/ep3/wh out/decompiled-script/translation-files/ep3
        cp -r story/ep4/wh out/decompiled-script/translation-files/ep4
        cp -r story/ep5/wh out/decompiled-script/translation-files/ep5
        cp -r story/ep6/wh out/decompiled-script/translation-files/ep6
        cp -r story/ep7/wh out/decompiled-script/translation-files/ep7
        cp -r story/ep8/wh out/decompiled-script/translation-files/ep8
        php update-manager/update-manager.php dscript out/decompiled-script/full-script.txt . wh
        php update-manager/update-manager.php script out/decompiled-script/full-script.txt out/Witch-Hunt.file 8
        cd out
        zip -r umiproj-wh-tl.zip decompiled-script Witch-Hunt.file
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release_${{ github.sha }}
        release_name: ${{ github.sha }}
    - name: Upload .file
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: out/umiproj-wh-tl.zip
        asset_name: umiproj-wh-tl.zip
        asset_content_type: application/octet-stream
